# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $term alacritty

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 9

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3
#bindsym $mod+Home exec "notify-send --icon=endeavouros \\"Welcome to $(lsb_release -si), $USER\\""

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork
#Start GNOME's polkit for root privilege leverage
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
#exec --no-startup-id nm-applet

#Start ibus daemon (I use it to type Vietnamese, Japanese users can also use it with ibus-mozc
# and Simplified Chinese with ibus-pinyin). For some reason, there is no tray icon so you may want to
#to config a shortcut using ibus-setup. I don't use fcitx5 now because it is buggy in my system for unknown reasons.
exec --no-startup-id "ibus-daemon"

#Start mako
exec --no-startup-id mako

#Border size, no title bar, 0 pixel
default_border pixel 0
default_floating_border pixel 0
bindsym $mod+y border normal 0
bindsym $mod+Shift+y border pixel 0

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier

# start a terminal
bindsym $mod+Return exec $term

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
#bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
#bindcode $mod+40 exec "rofi -modi drun,run -show drun"

#start nwg-drawer
exec --no-startup-id "nwg-drawer -r -mt 30 -mr 30 -mb 30 -ml 30 -is 48"
bindsym $mod+d exec --no-startup-id nwg-drawer

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# switch to previous/next workspace
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

#Resize windows
bindsym $mod+Ctrl+Left resize shrink width 5 px or 5 ppt
bindsym $mod+Ctrl+Right resize grow width 5 px or 5 ppt
bindsym $mod+Ctrl+Up resize grow height 5 px or 5 ppt
bindsym $mod+Ctrl+Down resize shrink height 5 px or 5 ppt

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

#output "*" bg ~/.config/gtklock/background.jpg fill

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

#Use waybar
exec_always --no-startup-id "waybar&"

#Inner gaps for all windows : Space between two adjacents windows
gaps inner 3px
gaps outer 3px

#Wm rules
for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [window_role="About"] floating enable
for_window [class="xdman-Main" ] floating enable
for_window [class="GParted"] floating enable
for_window [class="alacritty"] opacity 0.85 

#  scratchpad
bindsym $mod+minus move scratchpad
bindsym $mod+plus scratchpad show

no_focus [class="plasmashell" window_type="notification"]

for_window [title="Desktop @ QRect.*"] kill; floating enable; border none
for_window [app_id="alacrity"] opacity 0.9

# Transparency
exec --no-startup-id /usr/share/swayfx/scripts/inactive-windows-transparency.py --opacity 0.85

#Swayfx unique config
blur enable
blur_radius 8
corner_radius 8
default_dim_inactive 0.2
shadows enable
scratchpad_minimize disable

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout 650   'gtklock -d' \
         timeout 800  'swaymsg "output * dpms off"' \
         resume        'swaymsg "output * dpms on"' \
         before-sleep  'gtklock -d'

#For systemd users, you may need to edit /etc/systemd/logind.conf so that pressing power button will only suspend instead of power off 
#(so that you don't accidentally turn off the computer and lose your work)
#Idk about other init systems since I don't use a window manager on them (even though I have a Void Linux partition, I'm lazy to config the WM
#so I use Xfce and KDE Plasma instead), don't ask me for that but you may get that sway don't take control of the power keys and lid actions.
#Edit: It seems like in some non-systemd distros with elogind (Artix, Void, Gentoo, MX,...), elogind may inhibit the power button so the above may apply.
#Though Idk how to do that if your distro take even further and remove elogind altogether...

# This will lock your screen after 650 seconds of inactivity, then turn off
# your displays after another 150 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

#Change cursor theme and size:
seat seat0 xcursor_theme Yaru 24

#For systemd users
include /etc/sway/config.d/*

# Applies all generated settings (from swaysettings-git)
include ~/.config/sway/.generated_settings/*.conf

# Launches sway-wallpaper when setting wallpaper from swaymsg.
# Without this, swaybg would launch instead...
swaybg_command sway-wallpaper

# To apply the selected wallpaper
exec_always sway-wallpaper -i ~/.cache/wallpaper -m fill

# Start all of the non-hidden applications in ~/.config/autostart
# This executable is included in the swaysettings package
exec sway-autostart
